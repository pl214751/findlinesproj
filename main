import cv2
import numpy as np
import math

img = cv2.imread("/Users/local/Desktop/unnamed-1.jpg")


pt_D = [562, 184]
pt_C = [2408, 200]
pt_B = [2980, 2152]
pt_A = [49, 2147]

width_AD = np.sqrt(((pt_A[0] - pt_D[0]) ** 2) + ((pt_A[1] - pt_D[1]) ** 2))
width_BC = np.sqrt(((pt_B[0] - pt_C[0]) ** 2) + ((pt_B[1] - pt_C[1]) ** 2))
maxWidth = max(int(width_AD), int(width_BC))

height_AB = np.sqrt(((pt_A[0] - pt_B[0]) ** 2) + ((pt_A[1] - pt_B[1]) ** 2))
height_CD = np.sqrt(((pt_C[0] - pt_D[0]) ** 2) + ((pt_C[1] - pt_D[1]) ** 2))
maxHeight = max(int(height_AB), int(height_CD))

input_pts = np.float32([pt_D, pt_C, pt_B, pt_A])
output_pts = np.array([
     [0, 0],
     [maxWidth - 1, 0],
     [maxWidth - 1, maxHeight - 1],
     [0, maxHeight - 1]], dtype = "float32")
M = cv2.getPerspectiveTransform(input_pts,output_pts)
out = cv2.warpPerspective(img,M,(maxWidth, maxHeight))
gray = cv2.cvtColor(out, cv2.COLOR_BGR2GRAY)

dst = cv2.Canny(gray, 50, 200, None, 3)
lines = cv2.HoughLines(dst, 1, np.pi / 180, 100, None, 0, 0)
if lines is not None:
        for i in range(0, len(lines)):
            rho = lines[i][0][0]
            theta = lines[i][0][1]
            a = math.cos(theta)
            b = math.sin(theta)
            x0 = a * rho
            y0 = b * rho
            pt1 = (int(x0 + 1000*(-b)), int(y0 + 1000*(a)))
            pt2 = (int(x0 - 1000*(-b)), int(y0 - 1000*(a)))
            cv2.line(gray, pt1, pt2, (0,0,255), 3, cv2.LINE_AA)
linesP = cv2.HoughLinesP(dst, 1, np.pi / 180, 50, None, 2900, 900)
if linesP is not None:
    mylistx = []
    mylisty = []
    for i in range(0, len(linesP)):
        l = linesP[i][0]
        cv2.line(out, (l[0], l[1]), (l[2], l[3]), (0, 0, 255), 2, cv2.LINE_AA)
        mylistx.append(l[0])
        mylisty.append(l[1])
        mylistx.append(l[2])
        mylisty.append(l[3])
point1 = mylistx[-1]
point2 = mylistx[0]
xpointdiff = int(point2) + int(point1)
centerxpoint = int(xpointdiff)/2

out = cv2.arrowedLine(out,(int(centerxpoint), 1500), (int(centerxpoint), 500), (0, 0, 255), 10)
print(mylistx)
print(mylisty)
cv2.imshow("bob",out)
cv2.waitKey(0)
